#!/usr/bin/env bash
#Tool = ADB-Toolkit V2.1
#Author = ASHWINI SAHU
#Date = 07/02/2020
#Written in Bash
#"ONLY FOR EDUCATIONAL PURPOSE"

current_version=2.32

function banner() {

    COLUMNS=$(tput cols)

    banner_width=94
    banner2_width=52
    banner3_width=11

    banner_bottom_width=28
    banner3_bottom_width=15

    if ((banner_width <= COLUMNS)); then

        indent_main=$(((COLUMNS - banner_width) / 2))
        indent_bottom=$(((COLUMNS - banner_bottom_width) / 2))

        prefix=''

        for ((i = 1; i <= indent_main; i++)); do
            prefix+=' '
        done

        prefix_bottom=''
        for ((j = 1; j <= indent_bottom; j++)); do
            prefix_bottom+=' '
        done

        echo -e "\e[1;93m
${prefix} █████╗ ██████╗ ██████╗               ████████╗ ██████╗  ██████╗ ██╗     ██╗  ██╗██╗████████╗
${prefix}██╔══██╗██╔══██╗██╔══██╗              ╚══██╔══╝██╔═══██╗██╔═══██╗██║     ██║ ██╔╝██║╚══██╔══╝
${prefix}███████║██║  ██║██████╔╝    █████╗       ██║   ██║   ██║██║   ██║██║     █████╔╝ ██║   ██║
${prefix}██╔══██║██║  ██║██╔══██╗    ╚════╝       ██║   ██║   ██║██║   ██║██║     ██╔═██╗ ██║   ██║
${prefix}██║  ██║██████╔╝██████╔╝                 ██║   ╚██████╔╝╚██████╔╝███████╗██║  ██╗██║   ██║
${prefix}╚═╝  ╚═╝╚═════╝ ╚═════╝                  ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝   ╚═╝\n
${prefix_bottom}\e[93mMade with \e[1;91m❤️ \e[93mby \e[1;91mASHWINI SAHU\e[0m
    \e[0m"

    elif ((banner_bottom_width <= COLUMNS)); then

        indent_main=$(((COLUMNS - banner2_width) / 2))
        indent_bottom=$(((COLUMNS - banner_bottom_width) / 2))

        prefix=''

        for ((i = 1; i <= indent_main; i++)); do
            prefix+=' '
        done
        prefix_bottom=''
        for ((j = 1; j <= indent_bottom; j++)); do
            prefix_bottom+=' '
        done

        echo -e "\e[1;93m
${prefix}   ___   ___  ___     ______          ____    _ __
${prefix}  / _ | / _ \/ _ )___/_  __/__  ___  / / /__ (_) /_
${prefix} / __ |/ // / _  /___// / / _ \/ _ \/ /  '_// / __/
${prefix}/_/ |_/____/____/    /_/  \___/\___/_/_/\_\/_/\__/\n
${prefix_bottom}\e[93mMade with \e[91m❤️ \e[93mby \e[91mASHWINI SAHU\n
    \e[0m"
    else
        indent_main=$(((COLUMNS - banner3_width) / 2))
        indent_bottom=$(((COLUMNS - banner3_bottom_width) / 2))

        prefix=''

        for ((i = 1; i <= indent_main; i++)); do
            prefix+=' '
        done

        prefix_bottom=''
        for ((j = 1; j <= indent_bottom; j++)); do
            prefix_bottom+=' '
        done

        echo -e "${prefix}\e[1;93mADB-Toolkit\e[0m\n"
        echo -e "${prefix_bottom}By Ashwini Sahu"
    fi

}

banner

function check_new_version() {

    echo -ne "Checking for new version\r"

    if ping -q -c 1 -W 1 google.com >/dev/null; then
        checked_version=$(curl -s https://raw.githubusercontent.com/ASHWIN990/ADB-Toolkit/master/modules/version)
        if [ "$checked_version" != "$current_version" ]; then
            echo -ne "Current Version = $current_version , New Version = $checked_version"
            echo -ne "\n\e[91;7mNew update is released please update via git pull\e[27m\n"
            echo -ne "\e[93;5mWait 5 second or update\e[0m" && sleep 5
        fi
    fi

}

check_new_version

# if [ $(id -u) -ne 0 ]; then
#         echo "THIS SCRIPT MUST BE RAN AS ROOT"
#         exit 1
# fi

if [ -d "$PWD"/.temp/ ]; then
    echo -ne "YOU HAVE THE .temp DIRECTORY\r" #&& clear
else
    echo -ne "PLEASE INSTALL THE TOOL IF NOT INSTALLED OR IF INSTALLED MAKE A '.temp' DIRECTORY FIRST\r" && exit
fi

if ! command -v adb &>/dev/null; then
    echo -e "\nADB IS NOT INSTALLED, RUN THE INSTALLATION SCRIPT OR TRY INSTALLING 'ADB' MANUALLY"
    exit 1
fi

if ! command -v fastboot &>/dev/null; then
    echo -e "\nFASTBOOT IS NOT INSTALLED, RUN THE INSTALLATION SCRIPT OR TRY INSTALLING 'FASTBOOT' MANUALLY"
    exit 1
fi

while true; do
    read -rp $'\e[93;1mDo you want to kill and restart the Server. \e[1;97m (y/N) \e[93;1m? : \e[1;91m' yn
    case $yn in
    [Yy]*)
        echo -ne "\n\nKilling previous running ADB Server." && adb kill-server >/dev/null 2>&1
        echo -ne "\n\nStarting New ADB Server." && adb start-server >/dev/null 2>&1
        break
        ;;
    *)
        echo -ne "NOT RESTARTING THE SERVER\e[0m"
        break
        ;;
    esac
done

clear
bash modules/function.sh
