#!/usr/bin/env bash

#Total device count setting to zero initially
total_dev=0

## DEVICE ID & MODEL EXTARCT ##
dev=$(bash modules/HelperFunctions/GetDevices)

if [ "$dev" != "" ]; then
    total_dev=${#dev[@]}
fi

remote_shell() {

    devicecode=$1
    con_success=$2

    if [ "$con_success" == "0" ]; then
        while true; do
            read -rp $'\n\e[93;1mDo you want to launch the shell\e[1;97m (Y/N) \e[93;1m? : \e[1;91m' yn
            case $yn in
            [Yy]*)
                echo
                echo -e "\e[1;0m"
                adb -s "$devicecode" shell
                break
                ;;
            [Nn]*) break ;;
            *) echo -e "\e[1;93mPlease answer it with\e[1;97m ( Y/N )\e[0m" ;;
            esac
        done
    fi
}

dev_remote() {
    devicecode=$1
    modelname=$2
    echo -e "\n\e[1;93mMake sure that the device \e[1;91m$devicecode \e[1;93mis connected to the same network in which ADB-Tookit is installed.\n"

    dev_ip=$(adb -s "$devicecode" shell ip addr show wlan0 | grep "inet\s" | awk '{print $2}' | awk -F'/' '{print $1}')
    echo -e "\e[1;93mThe IP address is \e[1;91m$dev_ip\n"

    adb -s "$devicecode" tcpip 5555 >/dev/null 2>&1
    connect_msg=$(adb -s "$dev" connect "$dev_ip") >/dev/null 2>&1
    SUB='connected'
    if [[ "$connect_msg" == *"$SUB"* ]]; then
        con_success=0
        echo -e "\e[1;93mRemote connection established to device \e[1;91m$modelname\e[1;93m with IP \e[1;91m$dev_ip"
    else
        con_success=1
        echo -e "\e[1;93mRemote connection failed to device \e[1;91m$modelname\e[1;93m with IP \e[1;91m$dev_ip"
    fi
    remote_shell "$devicecode" "$con_success"
}

if [ "$total_dev" == "0" ]; then
    echo -e "\e[91;1mNO DEVICE CONNECTED"
else
    if [ "$total_dev" == "1" ]; then

        devcode=$(echo "${dev[0]}" | awk '{print $1}')
        modelname=$(echo "${dev[0]}" | awk '{print $2}')

        echo -e "\e[93m1. \e[92m$devcode , \e[93mModel : \e[92m$modelname"
        dev_remote "$devcode" "$modelname"

    else

        echo -e "\e[93mSelect the device to connect remotely :- \e[92m\n"

        for ((i = 0; i < total_dev; i++)); do
            devcode=$(echo "${dev[$i]}" | awk '{print $1}')
            modelname=$(echo "${dev[$i]}" | awk '{print $2}')
            echo -e "\e[93m1. \e[92m $devcode, \e[93mModel : \e[92m$modelname "
        done

        while true; do

            read -rp $'\n\e[1;4;91mEnter here\e[0m\e[24;1;97m : ' options
            [[ $options =~ ^[0-9]+$ ]] || {
                echo -e "\e[93m\nEnter a valid number"
                continue
            }
            if ((options >= 1 && options <= total_dev)); then

                devcode=$(echo "${dev[$options - 1]}" | awk '{print $1}')
                modelname=$(echo "${dev[$options - 1]}" | awk '{print $2}')
                dev_remote "$devcode" "$modelname"
                break

            else
                echo -e "\e[93m\nEnter a valid number"
            fi

        done

    fi
fi

## Asking to Clear the screen
bash modules/HelperFunctions/AskClear
