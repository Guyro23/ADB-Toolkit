#!/usr/bin/env bash

#Total device count setting to zero initially
total_dev=0

## DEVICE ID & MODEL EXTARCT ##
dev=$(bash modules/HelperFunctions/GetDevices)

if [ "$dev" != "" ]; then
    total_dev=${#dev[@]}
fi

function dev_dump() {

    devcode=$1
    modelname=$2

    # cureetime=$(date +"%T")
    echo -e "\n\e[1;92mDumping the Memory info of  device $modelname\n"
    echo -e "\e[1;92mPress q to stop in viewing\n"
    echo -e "THE DEVICE IS INITIALIZING WAIT\e[0m"
    dev_dump_mem=$(adb -s "$devcode" shell dumpsys meminfo)
    echo -e "$dev_dump_mem" | less
}

if [ "$total_dev" == "0" ]; then
    echo -e "\e[91;1mNO DEVICE CONNECTED"
else
    if [ "$total_dev" == "1" ]; then

        devcode=$(echo "${dev[0]}" | awk '{print $1}')
        modelname=$(echo "${dev[0]}" | awk '{print $2}')

        echo -e "\e[93m1. \e[92m$devcode , \e[93mModel : \e[92m$modelname"
        dev_dump "$devcode" "$modelname"

    else

        echo -e "\e[93mSelect the device to dump Memory info :- \e[92m\n"
        for ((i = 0; i < total_dev; i++)); do
            devcode=$(echo "${dev[$i]}" | awk '{print $1}')
            modelname=$(echo "${dev[$i]}" | awk '{print $2}')
            echo -e "\e[93m1. \e[92m $devcode, \e[93mModel : \e[92m$modelname "
        done

        while true; do

            read -rp $'\n\e[1;4;91mEnter here\e[0m\e[24;1;97m : ' options
            [[ $options =~ ^[0-9]+$ ]] || {
                echo -e "\e[93m\nEnter a valid number"
                continue
            }
            if ((options >= 1 && options <= total_dev)); then

                devcode=$(echo "${dev[$options - 1]}" | awk '{print $1}')
                modelname=$(echo "${dev[$options - 1]}" | awk '{print $2}')

                dev_dump "$devcode" "$modelname"
                break

            else
                echo -e "\e[93m\nEnter a valid number"
            fi

        done

    fi
fi

## Asking to Clear the screen
bash modules/HelperFunctions/AskClear
