#!/usr/bin/env bash

#Total device count setting to zero initially
total_dev=0

## DEVICE ID & MODEL EXTARCT ##
dev=$(bash modules/HelperFunctions/GetDevices)

if [ "$dev" != "" ]; then
    total_dev=${#dev[@]}
fi


apk_uninstall() {
    devcode=$1
    modelname=$2
    
    read -rp $'\e[1;93mENTER THE PACKAGE NAME YOU WANT TO UNINSTALL : \e[1;92m' uninstall_pkg
    if [ "$uninstall_pkg" == "" ]; then
        apk_uninstall "$devcode" "$modelname"
    else
        
        if adb -s "$devcode" uninstall "$uninstall_pkg" &>/dev/null; then
            echo -e "\n\e[1;92mSuccessfully uninstalled the 'apk' into device $modelname\n"
        else
            echo -e "\n\e[1;91mFailed uninstalling the 'apk' into device $modelname\n"
        fi
    fi
}


if [ "$total_dev" == "0" ]; then
    echo -e "\e[91;1mNO DEVICE CONNECTED"
else
    if [ "$total_dev" == "1" ]; then

        devcode=$(echo "${dev[0]}" | awk '{print $1}')
        modelname=$(echo "${dev[0]}" | awk '{print $2}')

        echo -e "\e[93m1. \e[92m$devcode , \e[93mModel : \e[92m$modelname"
        dev_install "$devcode" "$modelname"

    else

        echo -e "\e[93mSelect the device to Uninstall 'apk' :- \e[92m\n"

        for ((i = 0; i < total_dev; i++)); do
            devcode=$(echo "${dev[$i]}" | awk '{print $1}')
            modelname=$(echo "${dev[$i]}" | awk '{print $2}')
            echo -e "\e[93m1. \e[92m $devcode, \e[93mModel : \e[92m$modelname "
        done

        while true; do

            read -rp $'\n\e[1;4;91mEnter here\e[0m\e[24;1;97m : ' options
            [[ $options =~ ^[0-9]+$ ]] || {
                echo -e "\e[93m\nEnter a valid number"
                continue
            }
            if ((options >= 1 && options <= total_dev)); then

                devcode=$(echo "${dev[$options - 1]}" | awk '{print $1}')
                modelname=$(echo "${dev[$options - 1]}" | awk '{print $2}')

                apk_uninstall "$devcode" "$modelname"

                break

            else
                echo -e "\e[93m\nEnter a valid number"
            fi

        done

    fi
fi


# if [ "$total_dev" == "0" ]; then
#     echo -e "\e[91;1mNO DEVICE CONNECTED"
# else
#     if [ "$total_dev" == "1" ]; then

#         dev_1_uninst

#     else
#         if [ "$total_dev" == "2" ]; then
#             echo -e "\e[93mSelect the device to Uninstall 'apk' :- \e[92m\n"
#             echo -e "\e[93m1. \e[92m$dev_1 , \e[93mModel : \e[92m$mod_1"
#             echo -e "\e[93m2. \e[92m$dev_2 , \e[93mModel : \e[92m$mod_2"
#             while [ 1 ]; do
#                 read -p $'\n\e[1;4;91mEnter here\e[0m\e[24;1;97m : ' options
#                 case $options in
#                 "1")
#                     dev_1_uninst
#                     break
#                     ;;
#                 "2")
#                     dev_2_uninst
#                     break
#                     ;;
#                 *) echo -e "\n\e[1;4;91mENTER THE RIGHT OPTION BRO :- (1/2)\n" ;;
#                 esac
#             done
#         else
#             if [ "$total_dev" == "3" ]; then
#                 echo -e "\e[93mSelect the device to Uninstall 'apk' :- \e[92m\n"
#                 echo -e "\e[93m1. \e[92m$dev_1 , \e[93mModel : \e[92m$mod_1"
#                 echo -e "\e[93m1. \e[92m$dev_2 , \e[93mModel : \e[92m$mod_2"
#                 echo -e "\e[93m1. \e[92m$dev_3 , \e[93mModel : \e[92m$mod_3"
#                 while [ 1 ]; do
#                     read -p $'\n\e[1;4;91mEnter here\e[0m\e[24;1;97m : ' options
#                     case $options in
#                     "1")
#                         dev_1_uninst
#                         break
#                         ;;
#                     "2")
#                         dev_2_uninst
#                         break
#                         ;;
#                     "3")
#                         dev_3_uninst
#                         break
#                         ;;
#                     *) echo -e "\n\e[1;4;91mENTER THE RIGHT OPTION BRO :- (1/2/3/)\n" ;;
#                     esac
#                 done
#             fi
#         fi

#     fi
# fi

## Asking to Clear the screen
bash modules/HelperFunctions/AskClear
